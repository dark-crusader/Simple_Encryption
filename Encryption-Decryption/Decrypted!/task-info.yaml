type: edu
custom_name: stage3
files:
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.SimpleTestCase;

    import java.util.List;

    public class EncryptDecryptTest extends StageTest {
        public EncryptDecryptTest() throws Exception {
            super(Main.class);
        }

        @Override
        public List<SimpleTestCase> generate() {
            return List.of(
                new SimpleTestCase(
                    "enc\n" +
                        "Welcome to hyperskill!\n" +
                        "5",
                    "\\jqhtrj%yt%m~ujwxpnqq&"),
                new SimpleTestCase(
                    "enc\n" +
                        "Hello\n" +
                        "0",
                    "Hello"),
                new SimpleTestCase(
                    "enc\n" +
                        "012345678\n" +
                        "1",
                    "123456789"),
                new SimpleTestCase(
                    "dec\n" +
                        "\\jqhtrj%yt%m~ujwxpnqq&\n" +
                        "5",
                    "Welcome to hyperskill!"),
                new SimpleTestCase(
                    "dec\n" +
                        "Hello\n" +
                        "0",
                    "Hello"),
                new SimpleTestCase(
                    "dec\n" +
                        "222233334444\n" +
                        "1",
                    "111122223333")
            );
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Main.java
  visible: true
  text: |
    package encryptdecrypt;

    public class Main {
        private static boolean isAlpha(char c) {
            return c >= 'a' && c <= 'z';
        }

        private static String encrypt(String text) {
            char[] input = text.toCharArray();
            char[] res = new char[text.length()];
            for(int i=0; i<text.length(); i++) {
                if(isAlpha(input[i])) {
                    res[i] = (char) ('z' - (input[i] - 'a'));
                } else {
                    res[i] = input[i];
                }
            }
            return String.valueOf(res);
        }
        public static void main(String[] args) {
            String text = "we found a treasure!";
            System.out.println(encrypt(text));

        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/46/stages/247/implement
status: Solved
record: 3
